services:
  postgis:
    image: postgis/postgis:17-3.5
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgis-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - db.local

  neo4j:
    image: neo4j:5.9.0
    restart: unless-stopped
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-plugins:/plugins
    networks:
      default:
        aliases:
          - neo4j.local

  qdrant:
    image: qdrant/qdrant:v1.12.5
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6333
      QDRANT__SERVICE__HTTP_PORT: 6334
      QDRANT__LOG_LEVEL: DEBUG  # Added debug logging
    networks:
      default:
        aliases:
          - qdrant.local

  hasura:
    image: hasura/graphql-engine:v2.43.0.cli-migrations-v3
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgis:
        condition: service_healthy
    volumes:
      - ./hasura/:/hasura/
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgis:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"    # Enabled console for development
      HASURA_GRAPHQL_DEV_MODE: "true"         # Enabled dev mode
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_JWT_SECRET}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_LOG_LEVEL: debug         # Changed to debug
    networks:
      default:
        aliases:
          - gql.local

  django:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgis
      POSTGRES_PORT: 5432
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USER: ${NEO4J_USER}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      QDRANT_URL: http://qdrant:6334
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_SETTINGS_MODULE: FishQueryPlatform.settings.dev
    volumes:
      - .:/app                               # Added volume mount for hot reload
    command:
      - sh
      - -c
      - >
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
    networks:
      default:
        aliases:
          - api.local

volumes:
  postgis-data:
  neo4j-data:
  neo4j-logs:
  neo4j-plugins:
  qdrant-data:

networks:
  default:
    name: app_network_dev