FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim

# Set environment variables for Python and apt
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Configure uv
ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_TOOL_BIN_DIR=/usr/local/bin

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libgdal-dev \
    gdal-bin \
    python3-dev \
    postgresql-client \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies including development tools
# This command will be run by docker-compose to leverage caching
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --all-extras

# Place executables from the created venv onto the PATH
ENV PATH="/app/.venv/bin:$PATH"

# Reset the entrypoint, don't invoke `uv`
ENTRYPOINT []

# Command to run the Django development server
# The application code will be mounted as a volume
EXPOSE 8000
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]